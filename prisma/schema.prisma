// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Usuario {
  idUsuario                Int                    @id @default(autoincrement())
  nombre                   String
  apellido                 String
  dni                      String
  email                    String
  telefono                 String?
  direccion                String?
  fechaNacimiento          DateTime?
  fechaCreacion            DateTime               @default(now())
  roles                    Rol[]                  // Relacion añadida
  historialVigencia         HistoriaVigenciaUsuario[]
  // tipoIdentificacion       TipoIdentificacion?     @relation(fields: [idTipoIdentificacion], references: [idTipoIdentificacion])
  // idTipoIdentificacion     Int?
  // casosAsignados           CasoAsignado[]          // Relacion añadida
  // horarios                 Horario[]               // Relacion añadida
  asignacionesDeRol        HistoriaRolUsuario[]    // Relacion añadida
  asignacionesDeProfesion  HistoriaProfesion[]     // Relacion añadida
}

model HistoriaVigenciaUsuario {
  idHistoriaVigenciaUsuario Int                   @id @default(autoincrement())
  inicioVigencia           DateTime               @default(now())
  finVigencia              DateTime               @default(now())
  usuario                  Usuario                @relation(fields: [idUsuario], references: [idUsuario])
  idUsuario                Int
}

model HistoriaRolUsuario {
  idHistoriaRolUsuario     Int                    @id @default(autoincrement())
  inicioVigencia           DateTime               @default(now())
  finVigencia              DateTime               @updatedAt
  usuario                  Usuario                @relation(fields: [usuarioIdUsuario], references: [idUsuario])
  usuarioIdUsuario         Int
  rol                      Rol                    @relation(fields: [rolIdRol], references: [idRol])
  rolIdRol                 Int
}

model HistoriaPermisoRol {
  idHistoriaPermisoRol Int     @id @default(autoincrement())
  inicioVigencia       DateTime @default(now())
  finVigencia          DateTime @updatedAt
  permiso              Int[]
  rol                  Rol      @relation(fields: [idRol], references: [idRol])
  idRol                Int
}

model Rol {
  idRol                    Int                    @id @default(autoincrement())
  nombreRol                String
  usuarios                 Usuario[]              // Relacion añadida
  asignacionesDePermiso    HistoriaPermisoRol[]   // Relacion añadida
  HistoriaPermisoRol       HistoriaRolUsuario[]   // Relacion añadida
  
}


model HistoriaProfesion {
  idHistoriaProfesion      Int                    @id @default(autoincrement())
  inicioVigencia           DateTime               @default(now())
  finVigencia              DateTime               @updatedAt
  usuario                  Usuario                @relation(fields: [usuarioIdUsuario], references: [idUsuario])
  usuarioIdUsuario         Int
  profesion                Profesion              @relation(fields: [profesionIdProfesion], references: [idProfesion])
  profesionIdProfesion     Int
}

model Profesion {
  idProfesion              Int                    @id @default(autoincrement())
  nombreProfesion          String
  historiasProfesion       HistoriaProfesion[]    // Relacion añadida
  inicioVigencia           DateTime               @default(now())
  finVigencia              DateTime               @updatedAt
}

// model Horario {
//   idHorario                Int                    @id @default(autoincrement())
//   diaSemana                Dia                    @relation(fields: [idDia], references: [idDia])
//   idDia                    Int
//   horaInicio               DateTime
//   horaFin                  DateTime
//   usuarios                 Usuario[]              // Relacion añadida
// }

// model Dia {
//   idDia                    Int                    @id @default(autoincrement())
//   nombreDia                String
//   horarios                 Horario[]
// }



// model TipoIdentificacion {
//   idTipoIdentificacion     Int                    @id @default(autoincrement())
//   nombreTipoIdentificacion String
//   usuarios                 Usuario[]
// }

// model Caso {
//   idCaso                   Int                    @id @default(autoincrement())
//   codigo                   String
//   descripcion              String
//   fechaCreacion            DateTime               @default(now())
//   creadoPor                Usuario                
//   creadoPorIdUsuario       Int
//   asignacionesUsuario      CasoAsignado[]          // Relacion añadida
//   convivientes             Conviviente[]           // Relacion añadida
//   avances                  AvanceCaso[]            // Relacion añadida
//   derechoVulnerado         DerechoVulnerado[]      // Relacion añadida
//   historialEstados         HistoriaEstadoCaso[]    // Relacion añadida
//   recursosAsignados        AsignacionRecurso[]     // Relacion añadida
// }

// model CasoAsignado {
//   idCasoAsignado           Int                    @id @default(autoincrement())
//   inicioVigencia           DateTime               @default(now())
//   finVigencia              DateTime               @updatedAt
//   usuarioAsignado          Usuario                @relation(fields: [usuarioAsignadoIdUsuario], references: [idUsuario])
//   usuarioAsignadoIdUsuario Int
//   caso                     Caso                   @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int
// }

// model Turno {
//   idTurno                  Int                    @id @default(autoincrement())
//   fechaTurno               DateTime
//   usuario                  Usuario               
//   usuarioIdUsuario         Int?
//   estados                  HistoriaEstadoTurno[]   // Relacion añadida
// }

// model HistoriaEstadoTurno {
//   idHistoriaEstadoTurno    Int                    @id @default(autoincrement())
//   fechaCambio              DateTime
//   estadoTurno              EstadoTurno            @relation(fields: [estadoTurnoIdEstadoTurno], references: [idEstadoTurno])
//   estadoTurnoIdEstadoTurno Int
//   turno                    Turno                  @relation(fields: [turnoIdTurno], references: [idTurno])
//   turnoIdTurno             Int
  
//   caso                     Caso?                  @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int?
// }

// model EstadoTurno {
//   idEstadoTurno            Int                    @id @default(autoincrement())
//   nombreEstadoTurno        String
//   historiaEstadoTurno      HistoriaEstadoTurno[]  // Relacion añadida
//   turno                    Turno[]                // Relacion añadida
// }


// model Recurso {
//   idRecurso                Int                    @id @default(autoincrement())
//   nombreRecurso            String
//   tipoRecurso              TipoRecurso?           @relation(fields: [tipoRecursoIdTipoRecurso], references: [idTipoRecurso])
//   tipoRecursoIdTipoRecurso Int?
//   asignacionesRecurso      AsignacionRecurso[]     // Relacion añadida
//   donacion                 Donacion?              @relation(fields: [donacionIdDonacion], references: [idDonacion])
//   donacionIdDonacion       Int?
// }

// model Donacion {
//   idDonacion         Int      @id @default(autoincrement())
//   fechaDonacion      DateTime
//   donantes           Donante[] // Relacion
//   recursoDonado      Recurso   // Relacion inversa
//   idRecurso          Int      @map("idRecurso") // Clave foránea
// }

// model Donante {
//   idDonante          Int      @id @default(autoincrement())
//   nombre             String
//   apellido           String
//   dni                String
//   telefono           String?
//   direccion          String?
//   email              String?
//   observaciones      String?
//   donaciones         Donacion[] // Relación inversa
// }


// model TipoRecurso {
//   idTipoRecurso            Int                    @id @default(autoincrement())
//   nombreTipoRecurso        String
//   recursos                 Recurso[]
//   instanciasTipoRecurso    InstanciasTipoRecurso[] // Relacion añadida
// }

// model AsignacionRecurso {
//   idAsignacionRecurso      Int                    @id @default(autoincrement())
//   inicioVigencia           DateTime               @default(now())
//   finVigencia              DateTime               @updatedAt
//   recurso                  Recurso                @relation(fields: [recursoIdRecurso], references: [idRecurso])
//   recursoIdRecurso         Int
//   caso                     Caso                   @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int
// }

// model Conviviente {
//   idConviviente            Int                    @id @default(autoincrement())
//   nombre                   String
//   apellido                 String
//   edad                     Int
//   vinculo                  Vinculo                @relation(fields: [vinculoIdVinculo], references: [idVinculo])
//   vinculoIdVinculo         Int
//   escolaridad              Escolaridad?           @relation(fields: [escolaridadIdEscolaridad], references: [idEscolaridad])
//   escolaridadIdEscolaridad Int?
//   caso                     Caso                   @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int
// }

// model Escolaridad {
//   idEscolaridad            Int                    @id @default(autoincrement())
//   nombreEscolaridad        String
//   convivientes             Conviviente[]           // Relacion añadida
//   instanciasEscolaridad    InstanciasEscolaridad[] // Relacion añadida
// }

// model AvanceCaso {
//   idAvanceCaso             Int                    @id @default(autoincrement())
//   fechaAvance              DateTime
//   descripcion              String
//   registradoPor            Usuario                @relation(fields: [registradoPorIdUsuario], references: [idUsuario])
//   registradoPorIdUsuario   Int
//   caso                     Caso                   @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int
// }

// model HistoriaEstadoCaso {
//   idHistoriaEstadoCaso     Int                    @id @default(autoincrement())
//   fechaCambio              DateTime
//   estado                   EstadoCaso?            @relation(fields: [estadoIdEstadoCaso], references: [idEstadoCaso])
//   estadoIdEstadoCaso       Int?
//   caso                     Caso                   @relation(fields: [casoIdCaso], references: [idCaso])
//   casoIdCaso               Int
// }

// model EstadoCaso {
//   idEstadoCaso             Int                    @id @default(autoincrement())
//   nombreEstadoCaso         String
//   historialEstados         HistoriaEstadoCaso[]    // Relacion añadida
//   sucesores                EstadoCaso[]         @relation("EstadoCasoSucesor")
//   instanciasEstadoCaso     InstanciasEstadoCaso[] // Relacion añadida
// }


// model DerechoVulnerado {
//   idDerechoVulnerado       Int                    @id @default(autoincrement())
//   nombreDerechoVulnerado   String
//   casos                    Caso[]                 // Relacion añadida
//   instanciasDerechoVulnerado InstanciasDerechoVulnerado[] // Relacion añadida
// }

// model Vinculo {
//   idVinculo                Int                    @id @default(autoincrement())
//   nombreVinculo            String
//   convivientes             Conviviente[]           // Relacion añadida
//   instanciasVinculo        InstanciasVinculo[]    // Relacion añadida
// }

// model InstanciasTipoRecurso {
//   idInstanciasTipoRecurso  Int                    @id @default(autoincrement())
//   nombreInstanciasTipoRecurso String
//   tipoRecurso              TipoRecurso             @relation(fields: [tipoRecursoIdTipoRecurso], references: [idTipoRecurso])
//   tipoRecursoIdTipoRecurso Int
// }

// model InstanciasEscolaridad {
//   idInstanciasEscolaridad  Int                    @id @default(autoincrement())
//   nombreInstanciasEscolaridad String
//   escolaridad              Escolaridad            @relation(fields: [escolaridadIdEscolaridad], references: [idEscolaridad])
//   escolaridadIdEscolaridad Int
// }

// model InstanciasDerechoVulnerado {
//   idInstanciasDerechoVulnerado Int                    @id @default(autoincrement())
//   nombreInstanciasDerechoVulnerado String
//   derechoVulnerado         DerechoVulnerado       @relation(fields: [derechoVulneradoIdDerechoVulnerado], references: [idDerechoVulnerado])
//   derechoVulneradoIdDerechoVulnerado Int
// }

// model Profesion {
//   idInstanciasProfesion    Int                    @id @default(autoincrement())
//   nombreInstanciasProfesion String
//   profesion                Profesion              @relation(fields: [profesionIdProfesion], references: [idProfesion])
//   profesionIdProfesion     Int
// }

// model InstanciasVinculo {
//   idInstanciasVinculo      Int                    @id @default(autoincrement())
//   nombreInstanciasVinculo  String
//   vinculo                  Vinculo                @relation(fields: [vinculoIdVinculo], references: [idVinculo])
//   vinculoIdVinculo         Int
// }

// model InstanciasEstadoCaso {
//   idInstanciasEstadoCaso   Int                    @id @default(autoincrement())
//   nombreInstanciasEstadoCaso String
//   estadoCaso               EstadoCaso             @relation(fields: [estadoCasoIdEstadoCaso], references: [idEstadoCaso])
//   estadoCasoIdEstadoCaso   Int
// }


// model UnidadMedida {
//   idUnidadMedida           Int                    @id @default(autoincrement())
//   nombreUnidadMedida       String
//   tipoRecurso              TipoRecurso            @relation(fields: [tipoRecursoIdTipoRecurso], references: [idTipoRecurso])
//   tipoRecursoIdTipoRecurso Int
// }

